CREATE TABLE IF NOT EXISTS "users"
(
  "id"         TEXT NOT NULL,
  "email"      TEXT NOT NULL,
  "created_on" TIMESTAMPTZ NOT NULL,
  PRIMARY KEY (id),
  UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS "orgs"
(
  "id"         TEXT NOT NULL,
  "name"       TEXT NOT NULL,
  "owner_id"   TEXT NOT NULL,
  "created_on" TIMESTAMPTZ NOT NULL,
  PRIMARY KEY (id)
);
ALTER TABLE "orgs"
  ADD CONSTRAINT "orgs_owner_id_fk" FOREIGN KEY ("owner_id") REFERENCES "users" ("id");

CREATE TABLE IF NOT EXISTS "org_invites"
(
  "org_id"          TEXT NOT NULL,
  "invited_user_id" TEXT NOT NULL,
  "created_on"      TIMESTAMPTZ NOT NULL,
  PRIMARY KEY (org_id,  invited_user_id)
);
ALTER TABLE "org_invites"
  ADD CONSTRAINT "org_invites_user_id_fk" FOREIGN KEY ("invited_user_id") REFERENCES "users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE "org_invites"
  ADD CONSTRAINT "org_invites_org_id_fk" FOREIGN KEY ("org_id") REFERENCES "orgs" ("id") ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE IF NOT EXISTS "memberships"
(
  "org_id"  TEXT NOT NULL,
  "user_id" TEXT NOT NULL,
  "role"    TEXT NOT NULL,
  PRIMARY KEY (org_id,  user_id)
); -- role = owner|worker
ALTER TABLE "memberships"
  ADD CONSTRAINT "memberships_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE "memberships"
  ADD CONSTRAINT "memberships_org_id_fk" FOREIGN KEY ("org_id") REFERENCES "orgs" ("id") ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE IF NOT EXISTS "card_templates"
(
  "org_id" TEXT NOT NULL,
  "version" INTEGER NOT NULL,
  "description" TEXT NOT NULL,
  "card_expires_in_months" INT NOT NULL,
  "size" INTEGER NOT NULL,
  "created_on" TIMESTAMPTZ NOT NULL,
  PRIMARY KEY (org_id, version)
);
ALTER TABLE "card_templates"
  ADD CONSTRAINT "card_templates_org_id_fk" FOREIGN KEY ("org_id") REFERENCES "orgs" ("id") ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE IF NOT EXISTS "stamps"
(
  "id" TEXT NOT NULL,
  "issuer_id" TEXT NOT NULL,
  "org_id" TEXT NOT NULL,
  "card_template_version" INTEGER NOT NULL,
  "created_on" TIMESTAMPTZ NOT NULL,
  "registered_on" TIMESTAMPTZ NOT NULL,
  "claimed_on" TIMESTAMPTZ,
  PRIMARY KEY (org_id, id) -- id is generated by terminal app so need to make sure no one breaks other org stamp ids
);
ALTER TABLE "stamps"
  ADD CONSTRAINT "stamps_org_id_fk" FOREIGN KEY ("org_id") REFERENCES "orgs" ("id") ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE IF NOT EXISTS "stamp_packets"
(
  "id" TEXT NOT NULL,
  "org_id" TEXT NOT NULL,
  "size" INTEGER NOT NULL,
  "used" INTEGER NOT NULL,
  "created_on" TIMESTAMPTZ NOT NULL,
  "valid_until" TIMESTAMPTZ NOT NULL,
  PRIMARY KEY (id)
);
ALTER TABLE "stamp_packets"
  ADD CONSTRAINT "stamp_packets_org_id_fk" FOREIGN KEY ("org_id") REFERENCES "orgs" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
CREATE UNIQUE INDEX valid_org_packets_idx ON stamp_packets (org_id, valid_until);

-- API KEYS
CREATE TABLE "api_keys"
(
  "id"          TEXT NOT NULL,
  "user_id"     TEXT NOT NULL,
  "org_id"      TEXT,
  "role"        TEXT,
  "created_on"  TIMESTAMPTZ NOT NULL,
  "valid_until" TIMESTAMPTZ NOT NULL
);
ALTER TABLE "api_keys"
  ADD CONSTRAINT "api_keys_id" PRIMARY KEY ("id");
ALTER TABLE "api_keys"
  ADD CONSTRAINT "api_keys_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE "api_keys"
  ADD CONSTRAINT "api_keys_org_id_fk" FOREIGN KEY ("org_id") REFERENCES "orgs" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE "api_keys"
  ADD CONSTRAINT "api_keys_memberships_id_fk" FOREIGN KEY ("org_id", "user_id") REFERENCES "memberships" ("org_id", "user_id") ON DELETE CASCADE ON UPDATE CASCADE;
